> initializing model parallel with size 1
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2719 and data parallel seed: 1
[1043] rank = 0, world_size = 1
finding optimal strategy
iteration: 0, current latency: 0.0104, best latency: 0.0104 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0120, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0117, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0098, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0101, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0100, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0101, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0120, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0121, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0122, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0100, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0098, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0098, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0101, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0098, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0096, best latency: 0.0096 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0096, best latency: 0.0095 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0094, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0097, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0097, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0097, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0094, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0097, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0099, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0097, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0094, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0096, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0094, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0095, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0095, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0098, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0095, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0095, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0094, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0096, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0095, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0096, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0095, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 450, current latency: 0.0094, best latency: 0.0093 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0096, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 470, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 480, current latency: 0.0095, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 490, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 500, current latency: 0.0094, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 510, current latency: 0.0095, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 520, current latency: 0.0095, best latency: 0.0091 baseline latency: 0.0104
iteration: 530, current latency: 0.0095, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 540, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
iteration: 550, current latency: 0.0096, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 560, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 570, current latency: 0.0094, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 580, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 590, current latency: 0.0095, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 600, current latency: 0.0094, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
iteration: 610, current latency: 0.0096, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 620, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 630, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0104
iteration: 640, current latency: 0.0090, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 650, current latency: 0.0091, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 660, current latency: 0.0093, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
iteration: 670, current latency: 0.0093, best latency: 0.0090 baseline latency: 0.0104
iteration: 680, current latency: 0.0095, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 690, current latency: 0.0095, best latency: 0.0090 baseline latency: 0.0104
iteration: 700, current latency: 0.0098, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 710, current latency: 0.0094, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
iteration: 720, current latency: 0.0091, best latency: 0.0090 baseline latency: 0.0104
iteration: 730, current latency: 0.0094, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 740, current latency: 0.0093, best latency: 0.0090 baseline latency: 0.0104
iteration: 750, current latency: 0.0092, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 760, current latency: 0.0094, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 770, current latency: 0.0092, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 780, current latency: 0.0093, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 790, current latency: 0.0092, best latency: 0.0090 baseline latency: 0.0104
iteration: 800, current latency: 0.0090, best latency: 0.0090 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 810, current latency: 0.0092, best latency: 0.0090 baseline latency: 0.0104
iteration: 820, current latency: 0.0091, best latency: 0.0090 baseline latency: 0.0104
iteration: 830, current latency: 0.0090, best latency: 0.0088 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 840, current latency: 0.0092, best latency: 0.0088 baseline latency: 0.0104
no new strategies could be found
iteration: 850, current latency: 0.0089, best latency: 0.0088 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 860, current latency: 0.0090, best latency: 0.0088 baseline latency: 0.0104
iteration: 870, current latency: 0.0087, best latency: 0.0087 baseline latency: 0.0104
iteration: 880, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0104
no new strategies could be found
iteration: 890, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0104
iteration: 900, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0104
iteration: 910, current latency: 0.0093, best latency: 0.0087 baseline latency: 0.0104
iteration: 920, current latency: 0.0090, best latency: 0.0087 baseline latency: 0.0104
no new strategies could be found
iteration: 930, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0104
iteration: 940, current latency: 0.0090, best latency: 0.0087 baseline latency: 0.0104
iteration: 950, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0104
iteration: 960, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0104
no new strategies could be found
no new strategies could be found
iteration: 970, current latency: 0.0088, best latency: 0.0087 baseline latency: 0.0104
iteration: 980, current latency: 0.0091, best latency: 0.0086 baseline latency: 0.0104
iteration: 990, current latency: 0.0086, best latency: 0.0086 baseline latency: 0.0104
optimal latency: 0.008574926853179931, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
})])
Epoch: 1 	Training Loss: 64389351915950931968.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 86.42816734313965s, THROUGHPUT = 694.2181217586882 samples/s
Epoch: 2 	Training Loss: 9181427275431884.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 85.73168778419495s, THROUGHPUT = 699.8579119430481 samples/s
Epoch: 3 	Training Loss: 3759860130072634.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 85.85284447669983s, THROUGHPUT = 698.8702630148008 samples/s
Epoch: 4 	Training Loss: 1491423125233292.750000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 86.86732578277588s, THROUGHPUT = 690.7084966565973 samples/s
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 344.8807535171509s, BATCH = 32 AVG. THROUGHPUT = 695.9136983432836 samples/s, AVG. LATENCY = 86.22000634670258
Test Loss: 35153075584892.929688


Test Accuracy (Overall): 12.3000% (1230/10000)
Best ips: 695.9136983432836, Latency: 0.04632924041748047, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 2
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2718 and data parallel seed: 0
[6174] rank = 0, world_size = 2
[6175] rank = 1, world_size = 2
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0171, best latency: 0.0171 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0171, best latency: 0.0171 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0171, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0171, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0176, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0189, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0199, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0171, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0171, best latency: 0.0170 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0167, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0167, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0186, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0167, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0194, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0167, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0169, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0167, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0167, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0177, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0168, best latency: 0.0167 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0170, best latency: 0.0164 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0164, best latency: 0.0164 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0168, best latency: 0.0164 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0170, best latency: 0.0164 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0167, best latency: 0.0164 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0164, best latency: 0.0160 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0159, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0180, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0160, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0167, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0162, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0163, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0188, best latency: 0.0159 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0155, best latency: 0.0155 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0150, best latency: 0.0149 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0170, best latency: 0.0149 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0154, best latency: 0.0149 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 450, current latency: 0.0179, best latency: 0.0149 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0149, best latency: 0.0149 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 470, current latency: 0.0160, best latency: 0.0149 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 480, current latency: 0.0146, best latency: 0.0146 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 490, current latency: 0.0146, best latency: 0.0146 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 500, current latency: 0.0145, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 510, current latency: 0.0147, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 520, current latency: 0.0144, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 530, current latency: 0.0140, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 540, current latency: 0.0144, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 550, current latency: 0.0141, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 560, current latency: 0.0140, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 570, current latency: 0.0140, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 580, current latency: 0.0141, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 590, current latency: 0.0143, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 600, current latency: 0.0144, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 610, current latency: 0.0140, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 620, current latency: 0.0143, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 630, current latency: 0.0150, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
iteration: 640, current latency: 0.0148, best latency: 0.0140 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 650, current latency: 0.0139, best latency: 0.0139 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 660, current latency: 0.0137, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 670, current latency: 0.0137, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 680, current latency: 0.0136, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 690, current latency: 0.0137, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 700, current latency: 0.0134, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 710, current latency: 0.0133, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 720, current latency: 0.0151, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
iteration: 730, current latency: 0.0147, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 740, current latency: 0.0143, best latency: 0.0133 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 750, current latency: 0.0136, best latency: 0.0129 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 760, current latency: 0.0131, best latency: 0.0129 baseline latency: 0.0171
no new strategies could be found
iteration: 770, current latency: 0.0134, best latency: 0.0128 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
iteration: 780, current latency: 0.0127, best latency: 0.0126 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 790, current latency: 0.0127, best latency: 0.0126 baseline latency: 0.0171
no new strategies could be found
iteration: 800, current latency: 0.0128, best latency: 0.0126 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 810, current latency: 0.0128, best latency: 0.0126 baseline latency: 0.0171
no new strategies could be found
iteration: 820, current latency: 0.0127, best latency: 0.0126 baseline latency: 0.0171
no new strategies could be found
no new strategies could be found
iteration: 830, current latency: 0.0124, best latency: 0.0119 baseline latency: 0.0171
iteration: 840, current latency: 0.0119, best latency: 0.0118 baseline latency: 0.0171
iteration: 850, current latency: 0.0123, best latency: 0.0118 baseline latency: 0.0171
iteration: 860, current latency: 0.0138, best latency: 0.0118 baseline latency: 0.0171
iteration: 870, current latency: 0.0128, best latency: 0.0110 baseline latency: 0.0171
iteration: 880, current latency: 0.0114, best latency: 0.0108 baseline latency: 0.0171
iteration: 890, current latency: 0.0112, best latency: 0.0108 baseline latency: 0.0171
iteration: 900, current latency: 0.0110, best latency: 0.0101 baseline latency: 0.0171
iteration: 910, current latency: 0.0109, best latency: 0.0101 baseline latency: 0.0171
iteration: 920, current latency: 0.0117, best latency: 0.0101 baseline latency: 0.0171
iteration: 930, current latency: 0.0110, best latency: 0.0101 baseline latency: 0.0171
iteration: 940, current latency: 0.0109, best latency: 0.0101 baseline latency: 0.0171
iteration: 950, current latency: 0.0129, best latency: 0.0101 baseline latency: 0.0171
iteration: 960, current latency: 0.0113, best latency: 0.0101 baseline latency: 0.0171
iteration: 970, current latency: 0.0113, best latency: 0.0101 baseline latency: 0.0171
iteration: 980, current latency: 0.0116, best latency: 0.0101 baseline latency: 0.0171
iteration: 990, current latency: 0.0114, best latency: 0.0101 baseline latency: 0.0171
optimal latency: 0.010141205787658692, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})])
Epoch: 1 	Training Loss: 23888590171491312599040.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 47.482179403305054s, THROUGHPUT = 1262.9580350691708 samples/s
Epoch: 2 	Training Loss: 372114499803903229952.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 47.38734006881714s, THROUGHPUT = 1265.4856742942925 samples/s
Epoch: 3 	Training Loss: 189384261327198453760.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 47.41862201690674s, THROUGHPUT = 1264.65083651353 samples/s
Epoch: 4 	Training Loss: 128984658976153960448.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 47.83139657974243s, THROUGHPUT = 1253.7371744942457 samples/s
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 190.1230981349945s, BATCH = 32 AVG. THROUGHPUT = 1261.7079300928099 samples/s, AVG. LATENCY = 47.52988451719284
RANK = 1, GPU AMOUNT = 2, ELAPSED TIME = 190.15408539772034s, BATCH = 32 AVG. THROUGHPUT = 1261.4825667031741 samples/s, AVG. LATENCY = 47.53839784860611
Test Loss: 4521163621936775680.000000


Test Accuracy (Overall): 6.3500% (635/10000)
Test Loss: 4521163621936775680.000000


Test Accuracy (Overall): 6.3500% (635/10000)
Best ips: 1261.7079300928099, Latency: 0.05104738162192362, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 3
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2773 and data parallel seed: 55
[8304] rank = 0, world_size = 3
[8306] rank = 2, world_size = 3
[8305] rank = 1, world_size = 3
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0213, best latency: 0.0213 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0243, best latency: 0.0212 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0222, best latency: 0.0209 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0242, best latency: 0.0208 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0217, best latency: 0.0208 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0208, best latency: 0.0208 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0214, best latency: 0.0208 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0208, best latency: 0.0208 baseline latency: 0.0213
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 8304) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_08:59:27
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 8305)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_08:59:27
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 8306)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_08:59:27
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 8304)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 4
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2729 and data parallel seed: 11
[11123] rank = 0, world_size = 4
[11126] rank = 3, world_size = 4
[11125] rank = 2, world_size = 4
[11124] rank = 1, world_size = 4
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0221, best latency: 0.0221 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0226, best latency: 0.0220 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0222, best latency: 0.0220 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0258, best latency: 0.0220 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0220, best latency: 0.0220 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0236, best latency: 0.0220 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0220, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0221, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0221, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0228, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0343, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0232, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0228, best latency: 0.0219 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0223, best latency: 0.0216 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0223, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0248, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0225, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0216, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0229, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0217, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0216, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0216, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0226, best latency: 0.0215 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0210, best latency: 0.0210 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0210, best latency: 0.0210 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0212, best latency: 0.0210 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0210, best latency: 0.0210 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0224, best latency: 0.0210 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0223, best latency: 0.0205 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0233, best latency: 0.0204 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0214, best latency: 0.0203 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0208, best latency: 0.0203 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0203, best latency: 0.0203 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0204, best latency: 0.0203 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0199, best latency: 0.0199 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0199, best latency: 0.0199 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0219, best latency: 0.0197 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0199, best latency: 0.0197 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0203, best latency: 0.0196 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0223, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0196, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0193, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0203, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0201, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0214, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 450, current latency: 0.0196, best latency: 0.0193 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0204, best latency: 0.0186 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 470, current latency: 0.0185, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 480, current latency: 0.0214, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 490, current latency: 0.0192, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 500, current latency: 0.0199, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 510, current latency: 0.0199, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 520, current latency: 0.0208, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 530, current latency: 0.0252, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 540, current latency: 0.0311, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 550, current latency: 0.0186, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 560, current latency: 0.0200, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 570, current latency: 0.0189, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 580, current latency: 0.0195, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 590, current latency: 0.0226, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 600, current latency: 0.0220, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 610, current latency: 0.0199, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 620, current latency: 0.0195, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 630, current latency: 0.0194, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 640, current latency: 0.0187, best latency: 0.0185 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 650, current latency: 0.0183, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 660, current latency: 0.0183, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 670, current latency: 0.0202, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 680, current latency: 0.0197, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 690, current latency: 0.0195, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 700, current latency: 0.0188, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 710, current latency: 0.0186, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 720, current latency: 0.0183, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 730, current latency: 0.0187, best latency: 0.0183 baseline latency: 0.0221
no new strategies could be found
iteration: 740, current latency: 0.0179, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 750, current latency: 0.0185, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 760, current latency: 0.0180, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 770, current latency: 0.0199, best latency: 0.0175 baseline latency: 0.0221
iteration: 780, current latency: 0.0187, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
iteration: 790, current latency: 0.0181, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 800, current latency: 0.0195, best latency: 0.0175 baseline latency: 0.0221
iteration: 810, current latency: 0.0203, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 820, current latency: 0.0178, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 830, current latency: 0.0180, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 840, current latency: 0.0179, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 850, current latency: 0.0201, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 860, current latency: 0.0192, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
iteration: 870, current latency: 0.0184, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 880, current latency: 0.0186, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 890, current latency: 0.0180, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 900, current latency: 0.0177, best latency: 0.0175 baseline latency: 0.0221
no new strategies could be found
iteration: 910, current latency: 0.0186, best latency: 0.0172 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 920, current latency: 0.0199, best latency: 0.0172 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 930, current latency: 0.0171, best latency: 0.0171 baseline latency: 0.0221
iteration: 940, current latency: 0.0175, best latency: 0.0171 baseline latency: 0.0221
iteration: 950, current latency: 0.0178, best latency: 0.0171 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
iteration: 960, current latency: 0.0181, best latency: 0.0171 baseline latency: 0.0221
no new strategies could be found
iteration: 970, current latency: 0.0173, best latency: 0.0167 baseline latency: 0.0221
no new strategies could be found
iteration: 980, current latency: 0.0203, best latency: 0.0163 baseline latency: 0.0221
no new strategies could be found
iteration: 990, current latency: 0.0165, best latency: 0.0163 baseline latency: 0.0221
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
optimal latency: 0.016174662113189697, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": true,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": true,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
})])
[E ProcessGroupNCCL.cpp:587] [Rank 2] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLGATHER, Timeout(ms)=1800000) ran for 1807536 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 3] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLGATHER, Timeout(ms)=1800000) ran for 1807539 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 1] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLGATHER, Timeout(ms)=1800000) ran for 1807530 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 0] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLGATHER, Timeout(ms)=1800000) ran for 1807543 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 1] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLREDUCE, Timeout(ms)=1800000) ran for 1807533 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 0] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLREDUCE, Timeout(ms)=1800000) ran for 1807557 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 2] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLREDUCE, Timeout(ms)=1800000) ran for 1807557 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:587] [Rank 3] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLREDUCE, Timeout(ms)=1800000) ran for 1807561 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:341] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data. To avoid this inconsistency, we are taking the entire process down.
[E ProcessGroupNCCL.cpp:341] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data. To avoid this inconsistency, we are taking the entire process down.
terminate called after throwing an instance of 'std::runtime_error'
terminate called after throwing an instance of '  what():  std::runtime_error[Rank 0] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLGATHER, Timeout(ms)=1800000) ran for 1807543 milliseconds before timing out.'

  what():  [Rank 3] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLGATHER, Timeout(ms)=1800000) ran for 1807539 milliseconds before timing out.
[E ProcessGroupNCCL.cpp:341] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data. To avoid this inconsistency, we are taking the entire process down.
[E ProcessGroupNCCL.cpp:341] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data. To avoid this inconsistency, we are taking the entire process down.
[E ProcessGroupNCCL.cpp:341] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data. To avoid this inconsistency, we are taking the entire process down.
terminate called after throwing an instance of 'std::runtime_error'
  what():  [Rank 2] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLREDUCE, Timeout(ms)=1800000) ran for 1807557 milliseconds before timing out.
terminate called recursively
terminate called after throwing an instance of 'std::runtime_error'
  what():  [Rank 1] Watchdog caught collective operation timeout: WorkNCCL(OpType=ALLREDUCE, Timeout(ms)=1800000) ran for 1807533 milliseconds before timing out.
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: -6) local_rank: 0 (pid: 11123) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
===========================================================
mnist_mlp.py FAILED
-----------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_10:25:03
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : -6 (pid: 11124)
  error_file: <N/A>
  traceback : Signal 6 (SIGABRT) received by PID 11124
[2]:
  time      : 2022-02-02_10:25:03
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : -6 (pid: 11125)
  error_file: <N/A>
  traceback : Signal 6 (SIGABRT) received by PID 11125
[3]:
  time      : 2022-02-02_10:25:03
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : -6 (pid: 11126)
  error_file: <N/A>
  traceback : Signal 6 (SIGABRT) received by PID 11126
-----------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_10:25:03
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : -6 (pid: 11123)
  error_file: <N/A>
  traceback : Signal 6 (SIGABRT) received by PID 11123
===========================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 5
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2753 and data parallel seed: 35
[16063] rank = 0, world_size = 5
[16065] rank = 2, world_size = 5
[16064] rank = 1, world_size = 5
[16067] rank = 4, world_size = 5
[16066] rank = 3, world_size = 5
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0319, best latency: 0.0319 baseline latency: 0.0319
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0349, best latency: 0.0319 baseline latency: 0.0319
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
                                 no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0317, best latency: 0.0317 baseline latency: 0.0319
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
                                                                                                                                                                                                                                                           no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0341, best latency: 0.0317 baseline latency: 0.0319
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
                                                                                                                                                                     no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0326, best latency: 0.0317 baseline latency: 0.0319
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
                                                                                                                                                                                                                                                                                            no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0068, best latency: 0.0067 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0069, best latency: 0.0067 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0068, best latency: 0.0067 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0068, best latency: 0.0067 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    best_ips, latency = train_and_test(local_rank, train_args)
      File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
AssertionError: 1024 is not divisible by 5
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
    init_processes(args)    
wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
AssertionError: 1024 is not divisible by 5
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 16063) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_10:42:23
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 16064)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_10:42:23
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 16065)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_10:42:23
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 16066)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_10:42:23
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 16067)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_10:42:23
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 16063)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0068, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0066, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0067, best latency: 0.0066 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0065, best latency: 0.0065 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0064, best latency: 0.0064 baseline latency: 0.0073
no new strategies could be found
iteration: 330, current latency: 0.0064, best latency: 0.0064 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0066, best latency: 0.0064 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0064, best latency: 0.0064 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0063, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0065, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0063, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
iteration: 410, current latency: 0.0066, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0073, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 450, current latency: 0.0063, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 470, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 480, current latency: 0.0065, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 490, current latency: 0.0064, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 500, current latency: 0.0063, best latency: 0.0063 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 510, current latency: 0.0063, best latency: 0.0063 baseline latency: 0.0073
iteration: 520, current latency: 0.0062, best latency: 0.0062 baseline latency: 0.0073
no new strategies could be found
iteration: 530, current latency: 0.0063, best latency: 0.0062 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 540, current latency: 0.0063, best latency: 0.0062 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 550, current latency: 0.0062, best latency: 0.0061 baseline latency: 0.0073
no new strategies could be found
iteration: 560, current latency: 0.0064, best latency: 0.0061 baseline latency: 0.0073
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       iteration: 570, current latency: 0.0064, best latency: 0.0061 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 580, current latency: 0.0061, best latency: 0.0061 baseline latency: 0.0073
no new strategies could be found
iteration: 590, current latency: 0.0061, best latency: 0.0061 baseline latencno 0.0073
no new strategies could be found
iteration: 600, current latency: 0.0061, best latency: 0.0061 baseline latency: 0.0073
no new strategies could be found
iteration: 610, current latency: 0.0062, best latency: 0.0060 baseline latency: 0.0073
                                                                                                                                                                      no new strategies could be found
iteration: 620, current latency: 0.0060, best latency: 0.0060 baseline latency: 0.0073
no new strategies could be found
iteration: 630, current latency: 0.0064, best latency: 0.0060 baseline latency: 0.0073
no new strategies could be found
                                                                                                                                               iteration: 640, current latency: 0.0060, best latency: 0.0060 baseline latency: 0.0073
iteration: 650, current latency: 0.0061, best latency: 0.0060 baseline latency: 0.0073
no new strategies could be found
iteration: 660, current latency: 0.0061, best latency: 0.0060 baseline latency: 0.0073
iteration: 670, current latency: 0.0060, best latency: 0.0059 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 680, current latency: 0.0060, best latency: 0.0059 baseline latency: 0.0073
iteration: 690, current latency: 0.0061, best latency: 0.0059 baseline latency: 0.0073
iteration: 700, current latency: 0.0060, best latency: 0.0059 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 710, current latency: 0.0063, best latency: 0.0059 baseline latency: 0.0073
    no new strategies could be found
iteration: 720, current latency: 0.0063, best latency: 0.0059 baseline latency: 0.0073
iteration: 730, current latency: 0.0058, best latency: 0.0058 baseline latency: 0.0073
iteration: 740, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
                                                                                         iteration: 750, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
iteration: 760, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
                                                                                                                                                                                                                                                  iteration: 770, current latency: 0.0059, best latency: 0.0058 baseline latency: 0.0073
iteration: 780, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
no new strategies could be found
no new strategies could be found
iteration: 790, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
                                                                                         iteration: 800, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
no new strategies could be found
iteration: 810, current latency: 0.0059, best latency: 0.0058 baseline latency: 0.0073
no new strategies could be found
iteration: 820, current latency: 0.0060, best latency: 0.0058 baseline latency: 0.0073
                                                                                         iteration: 830, current latency: 0.0059, best latency: 0.0058 baseline latency: 0.0073
iteration: 840, current latency: 0.0059, best latency: 0.0058 baseline latency: 0.0073
iteration: 850, current latency: 0.0059, best latency: 0.0058 baseline latency: 0.0073
                                                                                                                                                                                             iteration: 860, current latency: 0.0059, best latency: 0.0058 baseline latency: 0.0073
iteration: 870, current latency: 0.0059, best latency: 0.0057 baseline latency: 0.0073
iteration: 880, current latency: 0.0059, best latency: 0.0057 baseline latency: 0.0073
iteration: 890, current latency: 0.0059, best latency: 0.0057 baseline latency: 0.0073
                                                                     iteration: 900, current latency: 0.0058, best latency: 0.0057 baseline latency: 0.0073
iteration: 910, current latency: 0.0060, best latency: 0.0057 baseline latency: 0.0073
iteration: 920, current latency: 0.0060, best latency: 0.0057 baseline latency: 0.0073
                                                                                                                                                            iteration: 930, current latency: 0.0058, best latency: 0.0057 baseline latency: 0.0073
no new strategies could be found
iteration: 940, current latency: 0.0058, best latency: 0.0057 baseline latency: 0.0073
iteration: 950, current latency: 0.0059, best latency: 0.0057 baseline latency: 0.0073
                                                                                                                                                            iteration: 960, current latency: 0.0059, best latency: 0.0057 baseline latency: 0.0073
iteration: 970, current latency: 0.0060, best latency: 0.0057 baseline latency: 0.0073
iteration: 980, current latency: 0.0059, best latency: 0.0057 baseline latency: 0.0073
iteration: 990, current latency: 0.0058, best latency: 0.0057 baseline latency: 0.0073
optimal latency: 0.005684578418731689, optimal strategy:
OrderedDict(no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0325, best latency: 0.0305 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})])
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    Epoch: 1 	Training Loss: 69500815822976704512.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 72.26047778129578s, THROUGHPUT = 830.3294116265955 samples/s
.0294 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0300, best latency: 0.0288 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0290, best latency: 0.0271 baseline latency: 0.0327
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
      File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    return custom_wrap(module, name, **kwargs), num_params
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap

AssertionError: 1024 is not divisible by 6
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 20370) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_11:01:25
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 20371)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_11:01:25
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 20372)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_11:01:25
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 20373)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_11:01:25
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 20374)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[5]:
  time      : 2022-02-02_11:01:25
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 5 (local_rank: 5)
  exitcode  : 1 (pid: 20375)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_11:01:25
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 20370)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
Epoch: 2 	Training Loss: 16992395172353618.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 72.20552897453308s, THROUGHPUT = 830.9612968996048 samples/s
Epoch: 3 	Training Loss: 4899576572042176.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 72.20061445236206s, THROUGHPUT = 831.0178584364816 samples/s
Epoch: 4 	Training Loss: 1749669340299325.250000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 72.09025430679321s, THROUGHPUT = 832.2900311137629 samples/s
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 288.7576961517334s, BATCH = 32 AVG. THROUGHPUT = 831.1496495191112 samples/s, AVG. LATENCY = 72.18921887874603
Test Loss: 49971951669608.445312


Test Accuracy (Overall): 17.1700% (1717/10000)
Best ips: 831.1496495191112, Latency: 0.03844813563028971, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 7
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2727 and data parallel seed: 9
[25427] rank = 6, world_size = 7
[25426] rank = 5, world_size = 7
[25425] rank = 4, world_size = 7
[25424] rank = 3, world_size = 7
[25421] rank = 0, world_size = 7
[25422] rank = 1, world_size = 7
[25423] rank = 2, world_size = 7
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0340, best latency: 0.0340 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0340, best latency: 0.0340 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0351, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0368, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0340, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0406, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0339, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0347, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0364, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0340, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0365, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0348, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0349, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0375, best latency: 0.0338 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0377, best latency: 0.0329 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0354, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0350, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0381, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0359, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0329, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0365, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0354, best latency: 0.0328 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0320, best latency: 0.0320 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0343, best latency: 0.0320 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0354, best latency: 0.0320 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0334, best latency: 0.0311 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 2
> initializing ddp with size 1
> initializing pipeno new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0321, best latency: 0.0311 baseline latency: 0.0340
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
o new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0203, best latency: 0.0166 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
    init_processes(args)  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap

  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 25421) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 25422)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 25423)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 25424)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 25425)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[5]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 5 (local_rank: 5)
  exitcode  : 1 (pid: 25426)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[6]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 6 (local_rank: 6)
  exitcode  : 1 (pid: 25427)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_11:24:07
  host      : dudu-set-0.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 25421)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0238, best latency: 0.0166 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0187, best latency: 0.0166 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0160, best latency: 0.0160 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0167, best latency: 0.0160 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0204, best latency: 0.0160 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0160, best latency: 0.0160 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0197, best latency: 0.0160 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0155, best latency: 0.0154 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0164, best latency: 0.0154 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0190, best latency: 0.0151 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0158, best latency: 0.0151 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0185, best latency: 0.0151 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0157, best latency: 0.0151 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0171, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0163, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0191, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0152, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0160, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0148, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2749 and data parallel seed: 31
[31216] rank = 0, world_size = 8
[31223] rank = 7, world_size = 8
[31218] rank = 2, world_size = 8
[31219] rank = 3, world_size = 8
[31221] rank = 5, world_size = 8
[31217] rank = 1, world_size = 8
[31222] ranno new strategies could be found
k = 4, world_size = 8
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0331, best latency: 0.0331 baseline latency: 0.0331
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0153, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0157, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0144, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0154, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0181, best latency: 0.0144 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0166, best latency: 0.0142 baseline latency: 0.0166
iteration: 290, current latency: 0.0150, best latency: 0.0142 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0162, best latency: 0.0138 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0152, best latency: 0.0138 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0151, best latency: 0.0138 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0196, best latency: 0.0138 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0170, best latency: 0.0138 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0141, best latency: 0.0134 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0150, best latency: 0.0134 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0149, best latency: 0.0134 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0195, best latency: 0.0134 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0133, best latency: 0.0133 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0139, best latency: 0.0130 baseline latency: 0.0166
iteration: 410, current latency: 0.0143, best latency: 0.0130 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0134, best latency: 0.0130 baseline latency: 0.0166
no new strategies could be found
iteration: 430, current latency: 0.0132, best latency: 0.0130 baseline latency: 0.0166
iteration: 440, current latency: 0.0161, best latency: 0.0130 baseline latency: 0.0166
iteration: 450, current latency: 0.0140, best latency: 0.0130 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0130, best latency: 0.0127 baseline latency: 0.0166
iteration: 470, current latency: 0.0130, best latency: 0.0127 baseline latency: 0.0166
no new strategies could be found
iteration: 480, current latency: 0.0136, best latency: 0.0123 baseline latency: 0.0166
no new strategies could be found
iteration: 490, current latency: 0.0137, best latency: 0.0123 baseline latency: 0.0166
no new strategies could be found
iteration: 500, current latency: 0.0148, best latency: 0.0123 baseline latency: 0.0166
iteration: 510, current latency: 0.0133, best latency: 0.0123 baseline latency: 0.0166
iteration: 520, current latency: 0.0131, best latency: 0.0123 baseline latency: 0.0166
iteration: 530, current latency: 0.0143, best latency: 0.0114 baseline latency: 0.0166
iteration: 540, current latency: 0.0165, best latency: 0.0114 baseline latency: 0.0166
iteration: 550, current latency: 0.0142, best latency: 0.0114 baseline latency: 0.0166
iteration: 560, current latency: 0.0140, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 570, current latency: 0.0120, best latency: 0.0114 baseline latency: 0.0166
iteration: 580, current latency: 0.0114, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 590, current latency: 0.0141, best latency: 0.0114 baseline latency: 0.0166
iteration: 600, current latency: 0.0136, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 610, current latency: 0.0140, best latency: 0.0114 baseline latency: 0.0166
iteration: 620, current latency: 0.0140, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 630, current latency: 0.0143, best latency: 0.0114 baseline latency: 0.0166
iteration: 640, current latency: 0.0127, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 650, current latency: 0.0183, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 660, current latency: 0.0124, best latency: 0.0114 baseline latency: 0.0166
iteration: 670, current latency: 0.0185, best latency: 0.0114 baseline latency: 0.0166
iteration: 680, current latency: 0.0171, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 690, current latency: 0.0141, best latency: 0.0114 baseline latency: 0.0166
no new strategies could be found
iteration: 700, current latency: 0.0137, best latency: 0.0114 baseline latency: 0.0166
iteration: 710, current latency: 0.0113, best latency: 0.0113 baseline latency: 0.0166
iteration: 720, current latency: 0.0137, best latency: 0.0113 baseline latency: 0.0166
iteration: 730, current latency: 0.0128, best latency: 0.0113 baseline latency: 0.0166
iteration: 740, current latency: 0.0156, best latency: 0.0113 baseline latency: 0.0166
iteration: 750, current latency: 0.0132, best latency: 0.0113 baseline latency: 0.0166
iteration: 760, current latency: 0.0134, best latency: 0.0113 baseline latency: 0.0166
iteration: 770, current latency: 0.0187, best latency: 0.0113 baseline latency: 0.0166
iteration: 780, current latency: 0.0118, best latency: 0.0113 baseline latency: 0.0166
iteration: 790, current latency: 0.0116, best latency: 0.0113 baseline latency: 0.0166
no new strategies could be found
iteration: 800, current latency: 0.0128, best latency: 0.0113 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
iteration: 810, current latency: 0.0127, best latency: 0.0113 baseline latency: 0.0166
iteration: 820, current latency: 0.0115, best latency: 0.0113 baseline latency: 0.0166
iteration: 830, current latency: 0.0156, best latency: 0.0113 baseline latency: 0.0166
iteration: 840, current latency: 0.0177, best latency: 0.0113 baseline latency: 0.0166
no new strategies could be found
no new strategies could be found
iteration: 850, current latency: 0.0136, best latency: 0.0113 baseline latency: 0.0166
iteration: 860, current latency: 0.0168, best latency: 0.0113 baseline latency: 0.0166
iteration: 870, current latency: 0.0165, best latency: 0.0113 baseline latency: 0.0166
iteration: 880, current latency: 0.0145, best latency: 0.0113 baseline latency: 0.0166
iteration: 890, current latency: 0.0121, best latency: 0.0113 baseline latency: 0.0166
iteration: 900, current latency: 0.0123, best latency: 0.0113 baseline latency: 0.0166
iteration: 910, current latency: 0.0115, best latency: 0.0107 baseline latency: 0.0166
iteration: 920, current latency: 0.0117, best latency: 0.0107 baseline latency: 0.0166
iteration: 930, current latency: 0.0105, best latency: 0.0105 baseline latency: 0.0166
iteration: 940, current latency: 0.0107, best latency: 0.0105 baseline latency: 0.0166
iteration: 950, current latency: 0.0105, best latency: 0.0100 baseline latency: 0.0166
iteration: 960, current latency: 0.0110, best latency: 0.0100 baseline latency: 0.0166
iteration: 970, current latency: 0.0110, best latency: 0.0096 baseline latency: 0.0166
iteration: 980, current latency: 0.0123, best latency: 0.0096 baseline latency: 0.0166
iteration: 990, current latency: 0.0109, best latency: 0.0096 baseline latency: 0.0166
optimal latency: 0.009640669822692871, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})])
Epoch: 1 	Training Loss: 55416779298920882176.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 40.79872679710388s, THROUGHPUT = 1469.849789632574 samples/s
Epoch: 2 	Training Loss: 11899960634844976.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 40.80495500564575s, THROUGHPUT = 1469.6254411186794 samples/s
Epoch: 3 	Training Loss: 5003348679473985.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 40.83545422554016s, THROUGHPUT = 1468.5278059792847 samples/s
Epoch: 4 	Training Loss: 2797905006160214.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 41.44605016708374s, THROUGHPUT = 1446.8930032716678 samples/s
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 163.8860092163086s, BATCH = 32 AVG. THROUGHPUT = 1463.7240100005515 samples/s, AVG. LATENCY = 40.971296548843384
RANK = 1, GPU AMOUNT = 2, ELAPSED TIME = 163.87997245788574s, BATCH = 32 AVG. THROUGHPUT = 1463.7803876612672 samples/s, AVG. LATENCY = 40.96990156173706
Test Loss: 344696281503262.312500


Test Accuracy (Overall): 10.5700% (1057/10000)
Test Loss: 344696281503262.312500


Test Accuracy (Overall): 10.5700% (1057/10000)
Best ips: 1463.7240100005515, Latency: 0.04423271095739994, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 3
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2729 and data parallel seed: 11
[62248] rank = 0, world_size = 3
[62250] rank = 2, world_size = 3
[62249] rank = 1, world_size = 3
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0200, best latency: 0.0200 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0220, best latency: 0.0199 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0240, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0239, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0223, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0223, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0200, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0207, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0200, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0228, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0198, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0222, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0200, best latency: 0.0198 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0195, best latency: 0.0195 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0195, best latency: 0.0195 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0194, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0200, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0195, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0203, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0195, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0212, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0194, best latency: 0.0194 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0189, best latency: 0.0189 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0208, best latency: 0.0189 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0188, best latency: 0.0188 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0198, best latency: 0.0188 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0194, best latency: 0.0188 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0202, best latency: 0.0188 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0182, best latency: 0.0182 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0182, best latency: 0.0182 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0207, best latency: 0.0182 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0183, best latency: 0.0182 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0182, best latency: 0.0182 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0182, best latency: 0.0182 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0178, best latency: 0.0178 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0184, best latency: 0.0173 baseline latency: 0.0200
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 62248) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_12:25:25
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 62249)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_12:25:25
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 62250)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_12:25:25
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 62248)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 4
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2754 and data parallel seed: 36
[65597] rank = 2, world_size = 4
[65596] rank = 1, world_size = 4
[65595] rank = 0, world_size = 4
[65598] rank = 3, world_size = 4
finding optimal strategy
finding optimal strategyfinding optimal strategy

finding optimal strategy
iteration: 0, current latency: 0.0219, best latency: 0.0219 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0284, best latency: 0.0219 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0272, best latency: 0.0219 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0245, best latency: 0.0219 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0277, best latency: 0.0205 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0246, best latency: 0.0205 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0226, best latency: 0.0205 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0199, best latency: 0.0199 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0227, best latency: 0.0197 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0250, best latency: 0.0189 baseline latency: 0.0219
no new strategies could be found
iteration: 100, current latency: 0.0218, best latency: 0.0186 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0214, best latency: 0.0186 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0188, best latency: 0.0186 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0200, best latency: 0.0186 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0186, best latency: 0.0186 baseline latency: 0.0219
no new strategies could be found
iteration: 150, current latency: 0.0197, best latency: 0.0186 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0205, best latency: 0.0176 baseline latency: 0.0219
no new strategies could be found
iteration: 170, current latency: 0.0197, best latency: 0.0176 baseline latency: 0.0219
no new strategies could be found
iteration: 180, current latency: 0.0180, best latency: 0.0176 baseline latency: 0.0219
no new strategies could be found
iteration: 190, current latency: 0.0175, best latency: 0.0174 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0177, best latency: 0.0170 baseline latency: 0.0219
iteration: 210, current latency: 0.0170, best latency: 0.0170 baseline latency: 0.0219
iteration: 220, current latency: 0.0188, best latency: 0.0168 baseline latency: 0.0219
iteration: 230, current latency: 0.0180, best latency: 0.0168 baseline latency: 0.0219
iteration: 240, current latency: 0.0181, best latency: 0.0164 baseline latency: 0.0219
iteration: 250, current latency: 0.0168, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0186, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0183, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0173, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
iteration: 290, current latency: 0.0170, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0204, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0166, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
iteration: 320, current latency: 0.0208, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
iteration: 330, current latency: 0.0200, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
iteration: 340, current latency: 0.0176, best latency: 0.0164 baseline latency: 0.0219
iteration: 350, current latency: 0.0164, best latency: 0.0164 baseline latency: 0.0219
iteration: 360, current latency: 0.0169, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0207, best latency: 0.0164 baseline latency: 0.0219
iteration: 380, current latency: 0.0236, best latency: 0.0164 baseline latency: 0.0219
no new strategies could be found
iteration: 390, current latency: 0.0202, best latency: 0.0164 baseline latency: 0.0219
iteration: 400, current latency: 0.0180, best latency: 0.0163 baseline latency: 0.0219
no new strategies could be found
iteration: 410, current latency: 0.0154, best latency: 0.0154 baseline latency: 0.0219
iteration: 420, current latency: 0.0194, best latency: 0.0154 baseline latency: 0.0219
no new strategies could be found
iteration: 430, current latency: 0.0158, best latency: 0.0154 baseline latency: 0.0219
iteration: 440, current latency: 0.0142, best latency: 0.0141 baseline latency: 0.0219
iteration: 450, current latency: 0.0150, best latency: 0.0141 baseline latency: 0.0219
no new strategies could be found
iteration: 460, current latency: 0.0149, best latency: 0.0138 baseline latency: 0.0219
iteration: 470, current latency: 0.0148, best latency: 0.0138 baseline latency: 0.0219
iteration: 480, current latency: 0.0168, best latency: 0.0138 baseline latency: 0.0219
iteration: 490, current latency: 0.0146, best latency: 0.0138 baseline latency: 0.0219
iteration: 500, current latency: 0.0139, best latency: 0.0138 baseline latency: 0.0219
iteration: 510, current latency: 0.0154, best latency: 0.0138 baseline latency: 0.0219
iteration: 520, current latency: 0.0178, best latency: 0.0134 baseline latency: 0.0219
iteration: 530, current latency: 0.0162, best latency: 0.0129 baseline latency: 0.0219
iteration: 540, current latency: 0.0173, best latency: 0.0129 baseline latency: 0.0219
iteration: 550, current latency: 0.0130, best latency: 0.0129 baseline latency: 0.0219
iteration: 560, current latency: 0.0118, best latency: 0.0118 baseline latency: 0.0219
iteration: 570, current latency: 0.0116, best latency: 0.0110 baseline latency: 0.0219
iteration: 580, current latency: 0.0111, best latency: 0.0110 baseline latency: 0.0219
iteration: 590, current latency: 0.0128, best latency: 0.0106 baseline latency: 0.0219
iteration: 600, current latency: 0.0116, best latency: 0.0106 baseline latency: 0.0219
iteration: 610, current latency: 0.0134, best latency: 0.0106 baseline latency: 0.0219
iteration: 620, current latency: 0.0147, best latency: 0.0106 baseline latency: 0.0219
iteration: 630, current latency: 0.0113, best latency: 0.0106 baseline latency: 0.0219
iteration: 640, current latency: 0.0117, best latency: 0.0106 baseline latency: 0.0219
iteration: 650, current latency: 0.0134, best latency: 0.0106 baseline latency: 0.0219
iteration: 660, current latency: 0.0163, best latency: 0.0106 baseline latency: 0.0219
iteration: 670, current latency: 0.0125, best latency: 0.0106 baseline latency: 0.0219
iteration: 680, current latency: 0.0115, best latency: 0.0106 baseline latency: 0.0219
iteration: 690, current latency: 0.0180, best latency: 0.0106 baseline latency: 0.0219
iteration: 700, current latency: 0.0155, best latency: 0.0106 baseline latency: 0.0219
iteration: 710, current latency: 0.0127, best latency: 0.0106 baseline latency: 0.0219
iteration: 720, current latency: 0.0123, best latency: 0.0106 baseline latency: 0.0219
iteration: 730, current latency: 0.0109, best latency: 0.0106 baseline latency: 0.0219
iteration: 740, current latency: 0.0142, best latency: 0.0106 baseline latency: 0.0219
iteration: 750, current latency: 0.0122, best latency: 0.0106 baseline latency: 0.0219
iteration: 760, current latency: 0.0134, best latency: 0.0106 baseline latency: 0.0219
iteration: 770, current latency: 0.0111, best latency: 0.0103 baseline latency: 0.0219
iteration: 780, current latency: 0.0107, best latency: 0.0103 baseline latency: 0.0219
iteration: 790, current latency: 0.0111, best latency: 0.0103 baseline latency: 0.0219
iteration: 800, current latency: 0.0113, best latency: 0.0103 baseline latency: 0.0219
iteration: 810, current latency: 0.0129, best latency: 0.0103 baseline latency: 0.0219
iteration: 820, current latency: 0.0110, best latency: 0.0103 baseline latency: 0.0219
iteration: 830, current latency: 0.0129, best latency: 0.0103 baseline latency: 0.0219
iteration: 840, current latency: 0.0142, best latency: 0.0103 baseline latency: 0.0219
iteration: 850, current latency: 0.0125, best latency: 0.0103 baseline latency: 0.0219
iteration: 860, current latency: 0.0110, best latency: 0.0103 baseline latency: 0.0219
iteration: 870, current latency: 0.0129, best latency: 0.0103 baseline latency: 0.0219
iteration: 880, current latency: 0.0127, best latency: 0.0103 baseline latency: 0.0219
iteration: 890, current latency: 0.0111, best latency: 0.0103 baseline latency: 0.0219
iteration: 900, current latency: 0.0120, best latency: 0.0103 baseline latency: 0.0219
iteration: 910, current latency: 0.0111, best latency: 0.0103 baseline latency: 0.0219
iteration: 920, current latency: 0.0117, best latency: 0.0103 baseline latency: 0.0219
iteration: 930, current latency: 0.0118, best latency: 0.0103 baseline latency: 0.0219
iteration: 940, current latency: 0.0176, best latency: 0.0103 baseline latency: 0.0219
iteration: 950, current latency: 0.0124, best latency: 0.0103 baseline latency: 0.0219
iteration: 960, current latency: 0.0109, best latency: 0.0103 baseline latency: 0.0219
iteration: 970, current latency: 0.0145, best latency: 0.0103 baseline latency: 0.0219
iteration: 980, current latency: 0.0128, best latency: 0.0103 baseline latency: 0.0219
iteration: 990, current latency: 0.0151, best latency: 0.0103 baseline latency: 0.0219
optimal latency: 0.010346603393554688, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})])
Epoch: 1 	Training Loss: 52470335434313826304.000000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 20.785441398620605s, THROUGHPUT = 2882.017218261982 samples/s
Epoch: 2 	Training Loss: 14529559006398610.000000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 20.636948108673096s, THROUGHPUT = 2902.7547912873865 samples/s
Epoch: 3 	Training Loss: 6644133295013075.000000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 20.515044450759888s, THROUGHPUT = 2920.00342206332 samples/s
RANK = 1, GPU AMOUNT = 4, ELAPSED TIME = 82.64535021781921s, BATCH = 32 AVG. THROUGHPUT = 2899.414483175253 samples/s, AVG. LATENCY = 20.661210358142853
Epoch: 4 	Training Loss: 4247201334331598.500000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 20.73192071914673s, THROUGHPUT = 2889.457316160598 samples/s
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 82.67014694213867s, BATCH = 32 AVG. THROUGHPUT = 2898.5581869433217 samples/s, AVG. LATENCY = 20.66733866930008
RANK = 2, GPU AMOUNT = 4, ELAPSED TIME = 82.67158460617065s, BATCH = 32 AVG. THROUGHPUT = 2898.491266300347 samples/s, AVG. LATENCY = 20.667806208133698
RANK = 3, GPU AMOUNT = 4, ELAPSED TIME = 82.70719766616821s, BATCH = 32 AVG. THROUGHPUT = 2897.2688622908995 samples/s, AVG. LATENCY = 20.67669403553009
Test Loss: 1557950500876740.250000
Test Loss: 1557950500876740.250000

Test Loss: 1557950500876740.250000


Test Loss: 1557950500876740.250000


Test Accuracy (Overall): 21.9400% (2194/10000)

Test Accuracy (Overall): 21.9400% (2194/10000)
Test Accuracy (Overall): 21.9400% (2194/10000)


Test Accuracy (Overall): 21.9400% (2194/10000)
Best ips: 2898.5581869433217, Latency: 0.044298975895612665, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 5
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2726 and data parallel seed: 8
[69941] rank = 2, world_size = 5
[69939] rank = 0, world_size = 5
[69940] rank = 1, world_size = 5
[69943] rank = 4, world_size = 5
[69942] rank = 3, world_size = 5
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0305, best latency: 0.0305 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0388, best latency: 0.0304 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0304, best latency: 0.0304 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0332, best latency: 0.0304 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0308, best latency: 0.0304 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0324, best latency: 0.0298 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0313, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0307, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0305, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0293, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0320, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0299, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0308, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0295, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0318, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0320, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0352, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0299, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0303, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0307, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0303, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0349, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0310, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0335, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0320, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0309, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0314, best latency: 0.0293 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0293, best latency: 0.0286 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0308, best latency: 0.0286 baseline latency: 0.0305
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
AssertionError: 1024 is not divisible by 5
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 69939) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_13:21:14
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 69940)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_13:21:14
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 69941)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_13:21:14
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 69942)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_13:21:14
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 69943)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_13:21:14
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 69939)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 6
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2747 and data parallel seed: 29
[75064] rank = 0, world_size = 6
[75068] rank = 4, world_size = 6
[75067] rank = 3, world_size = 6
[75065] rank = 1, world_size = 6
[75069] rank = 5, world_size = 6
[75066] rank = 2, world_size = 6
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0316, best latency: 0.0316 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0437, best latency: 0.0316 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0394, best latency: 0.0316 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0322, best latency: 0.0316 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0398, best latency: 0.0316 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0399, best latency: 0.0309 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0397, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0371, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0417, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0384, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0375, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0360, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0372, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0304, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0349, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0337, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0304, best latency: 0.0304 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0295, best latency: 0.0294 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0294, best latency: 0.0294 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0295, best latency: 0.0294 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0315, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0331, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0340, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0284, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0285, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0309, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0284, best latency: 0.0284 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0286, best latency: 0.0271 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0324, best latency: 0.0271 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0328, best latency: 0.0271 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0297, best latency: 0.0271 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0242, best latency: 0.0242 baseline latency: 0.0316
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
        init_processes(args)train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
        optimized_model = wrap_model(optimized_model, strategy=next_strategy)model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    return custom_wrap(module, name, **kwargs), num_params
    return custom_wrap(module, name, **kwargs), num_params  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
        return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
        self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)

  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    ensure_divisibility(numerator, denominator)
      File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    ensure_divisibility(numerator, denominator)    ensure_divisibility(numerator, denominator)

  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
    AssertionError: assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)1024 is not divisible by 6

AssertionError: 1024 is not divisible by 6
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 75065 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 75066 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 75067 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 75068 closing signal SIGTERM
WARNING:torch.distributed.elastic.multiprocessing.api:Sending process 75069 closing signal SIGTERM
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 75064) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_13:44:17
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 75064)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 7
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2770 and data parallel seed: 52
[81081] rank = 6, world_size = 7
[81080] rank = 5, world_size = 7
[81077] rank = 2, world_size = 7
[81079] rank = 4, world_size = 7
[81078] rank = 3, world_size = 7
[81075] rank = 0, world_size = 7
[81076] rank = 1, world_size = 7
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0327, best latency: 0.0327 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0329, best latency: 0.0326 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0356, best latency: 0.0326 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0325, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0385, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0359, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0345, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0330, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0365, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0325, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0378, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0325, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0357, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0386, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0354, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0326, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0332, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0325, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0374, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0325, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0335, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0361, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0379, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0352, best latency: 0.0325 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0357, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0330, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0366, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0316, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0323, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0315, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0350, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0332, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0373, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0315, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0329, best latency: 0.0315 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0336, best latency: 0.0307 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0324, best latency: 0.0307 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0301, best latency: 0.0298 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0299, best latency: 0.0298 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0342, best latency: 0.0298 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0327, best latency: 0.0292 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0311, best latency: 0.0292 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 81075) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 81076)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 81077)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 81078)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 81079)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[5]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 5 (local_rank: 5)
  exitcode  : 1 (pid: 81080)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[6]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 6 (local_rank: 6)
  exitcode  : 1 (pid: 81081)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_14:11:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 81075)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2736 and data parallel seed: 18
[87980] rank = 6, world_size = 8
[87974] rank = 0, world_size = 8
[87977] rank = 3, world_size = 8
[87975] rank = 1, world_size = 8
[87979] rank = 5, world_size = 8
[87981] rank = 7, world_size = 8
[87978] rank = 4, world_size = 8
[87976] rank = 2, world_size = 8
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0321, best latency: 0.0321 baseline latency: 0.0321
no new strategies could be found
no new strategies could be found
> initializing model parallel with size 1
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2766 and data parallel seed: 48
[717] rank = 0, world_size = 1
finding optimal strategy
iteration: 0, current latency: 0.0099, best latency: 0.0099 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0101, best latency: 0.0099 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0095, best latency: 0.0095 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0097, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0095, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0096, best latency: 0.0094 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0093, best latency: 0.0093 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0093, best latency: 0.0092 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0092, best latency: 0.0092 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0091, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0091, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0091, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0091, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0091, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0093, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0092, best latency: 0.0091 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0090, best latency: 0.0090 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0089, best latency: 0.0089 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0090, best latency: 0.0087 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0088, best latency: 0.0087 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0089, best latency: 0.0087 baseline latency: 0.0099
iteration: 450, current latency: 0.0088, best latency: 0.0087 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0090, best latency: 0.0087 baseline latency: 0.0099
no new strategies could be found
no new strategies could be found
iteration: 470, current latency: 0.0087, best latency: 0.0086 baseline latency: 0.0099
no new strategies could be found
iteration: 480, current latency: 0.0084, best latency: 0.0084 baseline latency: 0.0099
no new strategies could be found
iteration: 490, current latency: 0.0084, best latency: 0.0084 baseline latency: 0.0099
no new strategies could be found
iteration: 500, current latency: 0.0084, best latency: 0.0083 baseline latency: 0.0099
iteration: 510, current latency: 0.0086, best latency: 0.0083 baseline latency: 0.0099
iteration: 520, current latency: 0.0085, best latency: 0.0083 baseline latency: 0.0099
no new strategies could be found
iteration: 530, current latency: 0.0086, best latency: 0.0083 baseline latency: 0.0099
no new strategies could be found
iteration: 540, current latency: 0.0085, best latency: 0.0083 baseline latency: 0.0099
no new strategies could be found
iteration: 550, current latency: 0.0082, best latency: 0.0082 baseline latency: 0.0099
iteration: 560, current latency: 0.0084, best latency: 0.0082 baseline latency: 0.0099
no new strategies could be found
iteration: 570, current latency: 0.0084, best latency: 0.0082 baseline latency: 0.0099
no new strategies could be found
iteration: 580, current latency: 0.0081, best latency: 0.0081 baseline latency: 0.0099
no new strategies could be found
iteration: 590, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 600, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 610, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
no new strategies could be found
iteration: 620, current latency: 0.0082, best latency: 0.0081 baseline latency: 0.0099
iteration: 630, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 640, current latency: 0.0083, best latency: 0.0081 baseline latency: 0.0099
iteration: 650, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
no new strategies could be found
iteration: 660, current latency: 0.0086, best latency: 0.0081 baseline latency: 0.0099
iteration: 670, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
no new strategies could be found
iteration: 680, current latency: 0.0086, best latency: 0.0081 baseline latency: 0.0099
no new strategies could be found
iteration: 690, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 700, current latency: 0.0086, best latency: 0.0081 baseline latency: 0.0099
iteration: 710, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
iteration: 720, current latency: 0.0089, best latency: 0.0081 baseline latency: 0.0099
iteration: 730, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
iteration: 740, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
iteration: 750, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 760, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 770, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
no new strategies could be found
iteration: 780, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
iteration: 790, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 800, current latency: 0.0086, best latency: 0.0081 baseline latency: 0.0099
iteration: 810, current latency: 0.0084, best latency: 0.0081 baseline latency: 0.0099
iteration: 820, current latency: 0.0085, best latency: 0.0081 baseline latency: 0.0099
iteration: 830, current latency: 0.0083, best latency: 0.0081 baseline latency: 0.0099
iteration: 840, current latency: 0.0083, best latency: 0.0081 baseline latency: 0.0099
iteration: 850, current latency: 0.0082, best latency: 0.0079 baseline latency: 0.0099
iteration: 860, current latency: 0.0079, best latency: 0.0079 baseline latency: 0.0099
iteration: 870, current latency: 0.0078, best latency: 0.0078 baseline latency: 0.0099
iteration: 880, current latency: 0.0079, best latency: 0.0078 baseline latency: 0.0099
iteration: 890, current latency: 0.0076, best latency: 0.0076 baseline latency: 0.0099
iteration: 900, current latency: 0.0080, best latency: 0.0076 baseline latency: 0.0099
iteration: 910, current latency: 0.0079, best latency: 0.0076 baseline latency: 0.0099
iteration: 920, current latency: 0.0079, best latency: 0.0076 baseline latency: 0.0099
iteration: 930, current latency: 0.0078, best latency: 0.0076 baseline latency: 0.0099
iteration: 940, current latency: 0.0077, best latency: 0.0076 baseline latency: 0.0099
iteration: 950, current latency: 0.0079, best latency: 0.0076 baseline latency: 0.0099
iteration: 960, current latency: 0.0081, best latency: 0.0076 baseline latency: 0.0099
iteration: 970, current latency: 0.0080, best latency: 0.0076 baseline latency: 0.0099
iteration: 980, current latency: 0.0079, best latency: 0.0076 baseline latency: 0.0099
iteration: 990, current latency: 0.0077, best latency: 0.0076 baseline latency: 0.0099
optimal latency: 0.007577574253082276, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})])
Epoch: 1 	Training Loss: 91615604639533301760.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 83.34528517723083s, THROUGHPUT = 719.8967508769344 samples/s
Epoch: 2 	Training Loss: 22212889492996560.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 82.9102246761322s, THROUGHPUT = 723.6743144090467 samples/s
Epoch: 3 	Training Loss: 8689393558840690.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 83.16938304901123s, THROUGHPUT = 721.4193228371353 samples/s
Epoch: 4 	Training Loss: 3747748143663066.000000
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 83.06181168556213s, THROUGHPUT = 722.353615728192 samples/s
RANK = 0, GPU AMOUNT = 1, ELAPSED TIME = 332.48756885528564s, BATCH = 32 AVG. THROUGHPUT = 721.8360009628271 samples/s, AVG. LATENCY = 83.1216761469841
Test Loss: 71327801449381.890625


Test Accuracy (Overall): 16.7200% (1672/10000)
Best ips: 721.8360009628271, Latency: 0.04429963289896647, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 2
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2759 and data parallel seed: 41
[2124] rank = 1, world_size = 2
[2123] rank = 0, world_size = 2
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0173, best latency: 0.0173 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0199, best latency: 0.0169 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0169, best latency: 0.0169 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0175, best latency: 0.0169 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0182, best latency: 0.0169 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0185, best latency: 0.0169 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0169, best latency: 0.0169 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0164, best latency: 0.0164 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0188, best latency: 0.0164 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0192, best latency: 0.0161 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0172, best latency: 0.0160 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0211, best latency: 0.0160 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0176, best latency: 0.0160 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0166, best latency: 0.0155 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0161, best latency: 0.0155 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0166, best latency: 0.0155 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0171, best latency: 0.0155 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0170, best latency: 0.0155 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0155, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0195, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0152, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0159, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0171, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0155, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0162, best latency: 0.0152 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0148, best latency: 0.0148 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0187, best latency: 0.0148 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0168, best latency: 0.0147 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0151, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0148, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0148, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0157, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0147, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0154, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0152, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0159, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0171, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0145, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0162, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0164, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0160, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0145, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0170, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0145, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0150, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 450, current latency: 0.0147, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 460, current latency: 0.0145, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 470, current latency: 0.0145, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 480, current latency: 0.0147, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 490, current latency: 0.0147, best latency: 0.0145 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 500, current latency: 0.0140, best latency: 0.0140 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 510, current latency: 0.0159, best latency: 0.0139 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 520, current latency: 0.0131, best latency: 0.0131 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
iteration: 530, current latency: 0.0134, best latency: 0.0131 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 540, current latency: 0.0132, best latency: 0.0131 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 550, current latency: 0.0143, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 560, current latency: 0.0150, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 570, current latency: 0.0130, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 580, current latency: 0.0155, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 590, current latency: 0.0139, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 600, current latency: 0.0169, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 610, current latency: 0.0138, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
iteration: 620, current latency: 0.0130, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 630, current latency: 0.0157, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 640, current latency: 0.0138, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 650, current latency: 0.0133, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 660, current latency: 0.0130, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 670, current latency: 0.0138, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 680, current latency: 0.0161, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 690, current latency: 0.0153, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 700, current latency: 0.0138, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 710, current latency: 0.0146, best latency: 0.0130 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 720, current latency: 0.0129, best latency: 0.0128 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 730, current latency: 0.0140, best latency: 0.0128 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 740, current latency: 0.0165, best latency: 0.0128 baseline latency: 0.0173
no new strategies could be found
iteration: 750, current latency: 0.0130, best latency: 0.0128 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 760, current latency: 0.0135, best latency: 0.0128 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
iteration: 770, current latency: 0.0127, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 780, current latency: 0.0145, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 790, current latency: 0.0143, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
iteration: 800, current latency: 0.0157, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 810, current latency: 0.0144, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
iteration: 820, current latency: 0.0136, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
iteration: 830, current latency: 0.0137, best latency: 0.0127 baseline latency: 0.0173
iteration: 840, current latency: 0.0138, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
iteration: 850, current latency: 0.0142, best latency: 0.0127 baseline latency: 0.0173
iteration: 860, current latency: 0.0137, best latency: 0.0127 baseline latency: 0.0173
no new strategies could be found
no new strategies could be found
iteration: 870, current latency: 0.0143, best latency: 0.0127 baseline latency: 0.0173
iteration: 880, current latency: 0.0145, best latency: 0.0127 baseline latency: 0.0173
iteration: 890, current latency: 0.0121, best latency: 0.0116 baseline latency: 0.0173
no new strategies could be found
iteration: 900, current latency: 0.0120, best latency: 0.0115 baseline latency: 0.0173
iteration: 910, current latency: 0.0123, best latency: 0.0115 baseline latency: 0.0173
no new strategies could be found
iteration: 920, current latency: 0.0119, best latency: 0.0115 baseline latency: 0.0173
iteration: 930, current latency: 0.0134, best latency: 0.0115 baseline latency: 0.0173
iteration: 940, current latency: 0.0144, best latency: 0.0115 baseline latency: 0.0173
iteration: 950, current latency: 0.0111, best latency: 0.0111 baseline latency: 0.0173
iteration: 960, current latency: 0.0116, best latency: 0.0109 baseline latency: 0.0173
iteration: 970, current latency: 0.0117, best latency: 0.0109 baseline latency: 0.0173
iteration: 980, current latency: 0.0119, best latency: 0.0109 baseline latency: 0.0173
iteration: 990, current latency: 0.0127, best latency: 0.0109 baseline latency: 0.0173
no new strategies could be found
optimal latency: 0.010932910442352294, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
})])
Epoch: 1 	Training Loss: 27669507358636359680.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 48.811662673950195s, THROUGHPUT = 1228.5588466955403 samples/s
Epoch: 2 	Training Loss: 7715359962255886.000000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 48.139878034591675s, THROUGHPUT = 1245.7031976048847 samples/s
Epoch: 3 	Training Loss: 2976134938650074.500000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 48.00549125671387s, THROUGHPUT = 1249.1904244728066 samples/s
RANK = 1, GPU AMOUNT = 2, ELAPSED TIME = 193.25835418701172s, BATCH = 32 AVG. THROUGHPUT = 1241.2515306589348 samples/s, AVG. LATENCY = 48.31445795297623
Epoch: 4 	Training Loss: 1628579596809290.750000
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 48.30264163017273s, THROUGHPUT = 1241.5055983716713 samples/s
RANK = 0, GPU AMOUNT = 2, ELAPSED TIME = 193.26040196418762s, BATCH = 32 AVG. THROUGHPUT = 1241.2395167862257 samples/s, AVG. LATENCY = 48.31491839885712
Test Loss: 110830425274633.421875

Test Loss: 110830425274633.421875


Test Accuracy (Overall): 14.6200% (1462/10000)

Test Accuracy (Overall): 14.6200% (1462/10000)
Best ips: 1241.2395167862257, Latency: 0.05155031123817794, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 3
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2754 and data parallel seed: 36
[4253] rank = 0, world_size = 3
[4254] rank = 1, world_size = 3
[4255] rank = 2, world_size = 3
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0214, best latency: 0.0214 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0216, best latency: 0.0214 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0211, best latency: 0.0207 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0200, best latency: 0.0200 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0200, best latency: 0.0200 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0201, best latency: 0.0200 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0201, best latency: 0.0200 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0194, best latency: 0.0194 baseline latency: 0.0214
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    Traceback (most recent call last):
init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
        model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 3
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 4253) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_19:39:44
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 4254)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_19:39:44
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 4255)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_19:39:44
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 4253)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 4
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2769 and data parallel seed: 51
[7074] rank = 2, world_size = 4
[7072] rank = 0, world_size = 4
[7075] rank = 3, world_size = 4
[7073] rank = 1, world_size = 4
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0223, best latency: 0.0223 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0236, best latency: 0.0221 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0245, best latency: 0.0221 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0221, best latency: 0.0220 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0226, best latency: 0.0220 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0238, best latency: 0.0220 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0215, best latency: 0.0215 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0235, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0210, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0208, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0208, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0208, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0217, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0209, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0209, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0209, best latency: 0.0208 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0210, best latency: 0.0202 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0204, best latency: 0.0202 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0201, best latency: 0.0199 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0188, best latency: 0.0188 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0221, best latency: 0.0188 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0230, best latency: 0.0188 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0203, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0190, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0193, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0229, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0189, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0207, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0202, best latency: 0.0187 baseline latency: 0.0223
no new strategies could be found
iteration: 290, current latency: 0.0201, best latency: 0.0185 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0184, best latency: 0.0184 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0183, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0186, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0188, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0184, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 350, current latency: 0.0199, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 360, current latency: 0.0232, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 370, current latency: 0.0186, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 380, current latency: 0.0191, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 390, current latency: 0.0191, best latency: 0.0183 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 400, current latency: 0.0188, best latency: 0.0182 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 410, current latency: 0.0187, best latency: 0.0182 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 420, current latency: 0.0186, best latency: 0.0182 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 430, current latency: 0.0183, best latency: 0.0182 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 440, current latency: 0.0178, best latency: 0.0178 baseline latency: 0.0223
no new strategies could be found
iteration: 450, current latency: 0.0172, best latency: 0.0171 baseline latency: 0.0223
no new strategies could be found
iteration: 460, current latency: 0.0176, best latency: 0.0168 baseline latency: 0.0223
no new strategies could be found
iteration: 470, current latency: 0.0165, best latency: 0.0165 baseline latency: 0.0223
iteration: 480, current latency: 0.0170, best latency: 0.0165 baseline latency: 0.0223
iteration: 490, current latency: 0.0169, best latency: 0.0165 baseline latency: 0.0223
iteration: 500, current latency: 0.0167, best latency: 0.0165 baseline latency: 0.0223
iteration: 510, current latency: 0.0168, best latency: 0.0165 baseline latency: 0.0223
iteration: 520, current latency: 0.0165, best latency: 0.0165 baseline latency: 0.0223
iteration: 530, current latency: 0.0163, best latency: 0.0163 baseline latency: 0.0223
iteration: 540, current latency: 0.0156, best latency: 0.0155 baseline latency: 0.0223
iteration: 550, current latency: 0.0159, best latency: 0.0155 baseline latency: 0.0223
iteration: 560, current latency: 0.0164, best latency: 0.0155 baseline latency: 0.0223
no new strategies could be found
iteration: 570, current latency: 0.0158, best latency: 0.0155 baseline latency: 0.0223
iteration: 580, current latency: 0.0173, best latency: 0.0149 baseline latency: 0.0223
iteration: 590, current latency: 0.0150, best latency: 0.0149 baseline latency: 0.0223
iteration: 600, current latency: 0.0152, best latency: 0.0149 baseline latency: 0.0223
iteration: 610, current latency: 0.0171, best latency: 0.0147 baseline latency: 0.0223
iteration: 620, current latency: 0.0166, best latency: 0.0147 baseline latency: 0.0223
iteration: 630, current latency: 0.0171, best latency: 0.0147 baseline latency: 0.0223
iteration: 640, current latency: 0.0175, best latency: 0.0147 baseline latency: 0.0223
iteration: 650, current latency: 0.0158, best latency: 0.0146 baseline latency: 0.0223
iteration: 660, current latency: 0.0153, best latency: 0.0146 baseline latency: 0.0223
iteration: 670, current latency: 0.0151, best latency: 0.0146 baseline latency: 0.0223
iteration: 680, current latency: 0.0160, best latency: 0.0146 baseline latency: 0.0223
iteration: 690, current latency: 0.0150, best latency: 0.0146 baseline latency: 0.0223
iteration: 700, current latency: 0.0172, best latency: 0.0146 baseline latency: 0.0223
no new strategies could be found
iteration: 710, current latency: 0.0154, best latency: 0.0146 baseline latency: 0.0223
iteration: 720, current latency: 0.0150, best latency: 0.0146 baseline latency: 0.0223
iteration: 730, current latency: 0.0147, best latency: 0.0146 baseline latency: 0.0223
iteration: 740, current latency: 0.0153, best latency: 0.0146 baseline latency: 0.0223
iteration: 750, current latency: 0.0151, best latency: 0.0146 baseline latency: 0.0223
iteration: 760, current latency: 0.0150, best latency: 0.0146 baseline latency: 0.0223
iteration: 770, current latency: 0.0152, best latency: 0.0146 baseline latency: 0.0223
iteration: 780, current latency: 0.0157, best latency: 0.0146 baseline latency: 0.0223
iteration: 790, current latency: 0.0156, best latency: 0.0146 baseline latency: 0.0223
iteration: 800, current latency: 0.0152, best latency: 0.0146 baseline latency: 0.0223
iteration: 810, current latency: 0.0148, best latency: 0.0146 baseline latency: 0.0223
iteration: 820, current latency: 0.0150, best latency: 0.0144 baseline latency: 0.0223
iteration: 830, current latency: 0.0156, best latency: 0.0143 baseline latency: 0.0223
iteration: 840, current latency: 0.0163, best latency: 0.0143 baseline latency: 0.0223
iteration: 850, current latency: 0.0149, best latency: 0.0143 baseline latency: 0.0223
iteration: 860, current latency: 0.0147, best latency: 0.0143 baseline latency: 0.0223
iteration: 870, current latency: 0.0148, best latency: 0.0143 baseline latency: 0.0223
iteration: 880, current latency: 0.0147, best latency: 0.0143 baseline latency: 0.0223
iteration: 890, current latency: 0.0295, best latency: 0.0143 baseline latency: 0.0223
iteration: 900, current latency: 0.0143, best latency: 0.0143 baseline latency: 0.0223
iteration: 910, current latency: 0.0158, best latency: 0.0139 baseline latency: 0.0223
iteration: 920, current latency: 0.0139, best latency: 0.0139 baseline latency: 0.0223
iteration: 930, current latency: 0.0140, best latency: 0.0139 baseline latency: 0.0223
iteration: 940, current latency: 0.0140, best latency: 0.0139 baseline latency: 0.0223
no new strategies could be found
no new strategies could be found
iteration: 950, current latency: 0.0148, best latency: 0.0139 baseline latency: 0.0223
iteration: 960, current latency: 0.0155, best latency: 0.0139 baseline latency: 0.0223
iteration: 970, current latency: 0.0135, best latency: 0.0135 baseline latency: 0.0223
iteration: 980, current latency: 0.0140, best latency: 0.0135 baseline latency: 0.0223
iteration: 990, current latency: 0.0150, best latency: 0.0135 baseline latency: 0.0223
optimal latency: 0.01351395845413208, optimal strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
})])
Epoch: 1 	Training Loss: 35882871067081670656.000000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 25.769750595092773s, THROUGHPUT = 2324.585943466883 samples/s
Epoch: 2 	Training Loss: 12607751282504114.000000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 25.95513153076172s, THROUGHPUT = 2307.9829100076986 samples/s
Epoch: 3 	Training Loss: 5972636885091370.000000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 26.18524193763733s, THROUGHPUT = 2287.7008409037094 samples/s
RANK = 3, GPU AMOUNT = 4, ELAPSED TIME = 103.86486864089966s, BATCH = 32 AVG. THROUGHPUT = 2307.0925386464332 samples/s, AVG. LATENCY = 25.96611201763153
RANK = 1, GPU AMOUNT = 4, ELAPSED TIME = 103.87630796432495s, BATCH = 32 AVG. THROUGHPUT = 2306.8308117217402 samples/s, AVG. LATENCY = 25.968988239765167
Epoch: 4 	Training Loss: 3712456483541719.500000
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 25.954618453979492s, THROUGHPUT = 2308.028534737147 samples/s
RANK = 0, GPU AMOUNT = 4, ELAPSED TIME = 103.86545324325562s, BATCH = 32 AVG. THROUGHPUT = 2307.074557278859 samples/s, AVG. LATENCY = 25.96618562936783
RANK = 2, GPU AMOUNT = 4, ELAPSED TIME = 103.88190126419067s, BATCH = 32 AVG. THROUGHPUT = 2306.716377321771 samples/s, AVG. LATENCY = 25.970365405082703
Test Loss: 2341158338291355.000000

Test Loss: 2341158338291355.000000

Test Loss: 2341158338291355.000000

Test Loss: 2341158338291355.000000


Test Accuracy (Overall): 12.9400% (1294/10000)

Test Accuracy (Overall): 12.9400% (1294/10000)

Test Accuracy (Overall): 12.9400% (1294/10000)

Test Accuracy (Overall): 12.9400% (1294/10000)
Best ips: 2307.074557278859, Latency: 0.05545858644012712, Best strategy:
OrderedDict([('seq.0', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.1', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.2', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.3', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.4', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.5', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.6', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.7', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.8', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.9', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.10', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.11', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.12', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.13', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": true
    }
}), ('seq.14', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.15', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.16', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.17', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.18', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.19', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.20', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.21', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.22', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.23', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.24', {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.25', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.26', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.27', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.28', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.29', {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.30', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}), ('seq.31', {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
})]) 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 5
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2751 and data parallel seed: 33
[10747] rank = 3, world_size = 5
[10745] rank = 1, world_size = 5
[10744] rank = 0, world_size = 5
[10746] rank = 2, world_size = 5
[10748] rank = 4, world_size = 5
finding optimal strategyfinding optimal strategy

finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0315, best latency: 0.0315 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0330, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0336, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0346, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0361, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0316, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0320, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0360, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0314, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0349, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0355, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0342, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0362, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0354, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0343, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0325, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0325, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0351, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0367, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0357, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0358, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0321, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0354, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0318, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0331, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0314, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0330, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0338, best latency: 0.0314 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0317, best latency: 0.0298 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0298, best latency: 0.0298 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 300, current latency: 0.0338, best latency: 0.0296 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 310, current latency: 0.0318, best latency: 0.0296 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 320, current latency: 0.0327, best latency: 0.0296 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 330, current latency: 0.0322, best latency: 0.0296 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 340, current latency: 0.0345, best latency: 0.0296 baseline latency: 0.0315
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
        model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)

  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
AssertionError: 1024 is not divisible by 5
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 5
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 10744) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_20:50:45
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 10745)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_20:50:45
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 10746)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_20:50:45
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 10747)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_20:50:45
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 10748)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_20:50:45
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 10744)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 6
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2718 and data parallel seed: 0
[15055] rank = 4, world_size = 6
[15052] rank = 1, world_size = 6
[15051] rank = 0, world_size = 6
[15054] rank = 3, world_size = 6
[15053] rank = 2, world_size = 6
[15056] rank = 5, world_size = 6
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0327, best latency: 0.0327 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0357, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0325, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0361, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0361, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0507, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0354, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0331, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0333, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0324, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0343, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0325, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0347, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0342, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0324, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0325, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0371, best latency: 0.0324 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0317, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 180, current latency: 0.0362, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 190, current latency: 0.0348, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 200, current latency: 0.0317, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 210, current latency: 0.0332, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 220, current latency: 0.0334, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 230, current latency: 0.0357, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 240, current latency: 0.0317, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 250, current latency: 0.0348, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 260, current latency: 0.0342, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 270, current latency: 0.0372, best latency: 0.0317 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 280, current latency: 0.0311, best latency: 0.0311 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 290, current latency: 0.0360, best latency: 0.0310 baseline latency: 0.0327
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 6
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 15051) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_21:15:03
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 15052)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_21:15:03
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 15053)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_21:15:03
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 15054)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_21:15:03
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 15055)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[5]:
  time      : 2022-02-02_21:15:03
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 5 (local_rank: 5)
  exitcode  : 1 (pid: 15056)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_21:15:03
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 15051)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 7
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2741 and data parallel seed: 23
[20106] rank = 4, world_size = 7
[20108] rank = 6, world_size = 7
[20105] rank = 3, world_size = 7
[20107] rank = 5, world_size = 7
[20104] rank = 2, world_size = 7
[20103] rank = 1, world_size = 7
[20102] rank = 0, world_size = 7
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0341, best latency: 0.0341 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 10, current latency: 0.0386, best latency: 0.0341 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 20, current latency: 0.0380, best latency: 0.0341 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 30, current latency: 0.0344, best latency: 0.0341 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 40, current latency: 0.0367, best latency: 0.0336 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 50, current latency: 0.0393, best latency: 0.0334 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 60, current latency: 0.0329, best latency: 0.0329 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 70, current latency: 0.0355, best latency: 0.0329 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 80, current latency: 0.0335, best latency: 0.0328 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 90, current latency: 0.0357, best latency: 0.0328 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 100, current latency: 0.0369, best latency: 0.0324 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 110, current latency: 0.0398, best latency: 0.0317 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 120, current latency: 0.0395, best latency: 0.0314 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 130, current latency: 0.0356, best latency: 0.0314 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 140, current latency: 0.0335, best latency: 0.0314 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 150, current latency: 0.0344, best latency: 0.0301 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 160, current latency: 0.0364, best latency: 0.0301 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
iteration: 170, current latency: 0.0339, best latency: 0.0301 baseline latency: 0.0341
no new strategies could be found
no new strategies could be found
no new strategies could be found
no new strategies could be found
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
Traceback (most recent call last):
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 267, in <module>
    init_processes(args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 62, in init_processes
    best_ips, latency = train_and_test(local_rank, train_args)
  File "/workdisk/fairscale/dudu_tests/mlp/mnist_mlp.py", line 124, in train_and_test
    train_args.strategy, best_latency = Optimizer.find_optimal_strategy(temp_model, temp_optimizer, loss_model, sample,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 151, in find_optimal_strategy
    optimized_model = wrap_model(optimized_model, strategy=next_strategy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/Optimizer.py", line 44, in wrap_model
    model = custom_wrap.auto_wrap(model, auto_wrap_policy=my_auto_wrap_policy)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 403, in auto_wrap
    wrapped_module, remainder = ConfigAutoWrap.custom_recursive_wrap(module, auto_wrap_policy=auto_wrap_policy,
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 487, in custom_recursive_wrap
    wrapped_child, num_wrapped_params = ConfigAutoWrap.custom_recursive_wrap(
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 498, in custom_recursive_wrap
    return custom_wrap(module, name, **kwargs), num_params
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/custom_wrap.py", line 365, in custom_wrap
    return ConfigAutoWrap.wrapper_cls(module, module_name, **wrap_overrides)
  File "/workdisk/.local/lib/python3.9/site-packages/dudu_tests/layerwise_model_parallel.py", line 211, in __init__
    self.input_size_per_partition = divide_and_check_no_remainder(layer.in_features, world_size)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 36, in divide_and_check_no_remainder
    ensure_divisibility(numerator, denominator)
  File "/workdisk/.local/lib/python3.9/site-packages/fairscale/nn/model_parallel/utils.py", line 30, in ensure_divisibility
    assert numerator % denominator == 0, "{} is not divisible by {}".format(numerator, denominator)
AssertionError: 1024 is not divisible by 7
ERROR:torch.distributed.elastic.multiprocessing.api:failed (exitcode: 1) local_rank: 0 (pid: 20102) of binary: /opt/conda/bin/python
Traceback (most recent call last):
  File "/opt/conda/bin/torchrun", line 33, in <module>
    sys.exit(load_entry_point('torch==1.10.0', 'console_scripts', 'torchrun')())
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 345, in wrapper
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 719, in main
    run(args)
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/run.py", line 710, in run
    elastic_launch(
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 131, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/opt/conda/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 259, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
mnist_mlp.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 20103)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[2]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 20104)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[3]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 3 (local_rank: 3)
  exitcode  : 1 (pid: 20105)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[4]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 4 (local_rank: 4)
  exitcode  : 1 (pid: 20106)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[5]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 5 (local_rank: 5)
  exitcode  : 1 (pid: 20107)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
[6]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 6 (local_rank: 6)
  exitcode  : 1 (pid: 20108)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2022-02-02_21:32:35
  host      : dudu-set-1.pytorch.pelegdav.svc.cluster.local
  rank      : 0 (local_rank: 0)
  exitcode  : 1 (pid: 20102)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2758 and data parallel seed: 40
[25904] rank = 7, world_size = 8
[25903] rank = 6, world_size = 8
[25897] rank = 0, world_size = 8
[25902] rank = 5, world_size = 8
[25899] rank = 2, world_size = 8
[25898] rank = 1, world_size = 8
[25901] rank = 4, world_size = 8
[25900] rank = 3, world_size = 8
finding optimal strategy
finding optimal strategy
finding optimal strategyfinding optimal strategy

finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0337, best latency: 0.0337 baseline latency: 0.0337
no new strategies could be found
no new strategies could be found
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2759 and data parallel seed: 41
[68] rank = 2, world_size = 8
[66] rank = 0, world_size = 8
[70] rank = 4, world_size = 8
[71] rank = 5, world_size = 8
[67] rank = 1, world_size = 8
[69] rank = 3, world_size = 8
[73] rank = 7, world_size = 8
[72] rank = 6, world_size = 8
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
iteration: 0, current latency: 0.0332, best latency: 0.0332 baseline latency: 0.0332
no new strategies could be found
no new strategies could be found
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2769 and data parallel seed: 51
[50] rank = 2, world_size = 8
[52] rank = 4, world_size = 8
[53] rank = 5, world_size = 8
[55] rank = 7, world_size = 8
[49] rank = 1, world_size = 8
[48] rank = 0, world_size = 8
[51] rank = 3, world_size = 8
[54] rank = 6, world_size = 8
finding optimal strategyfinding optimal strategy

finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
optimal latency: 0.021476733684539794, optimal strategy:
{'seq.0': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.1': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.2': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.3': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.4': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.5': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.6': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.7': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.8': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.9': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.10': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.11': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.12': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.13': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.14': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.15': {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.16': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.17': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.18': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.19': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.20': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.21': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.22': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.23': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.24': {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.25': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.26': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.27': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.28': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.29': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.30': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.31': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}}
Epoch: 1 	Training Loss: 91533188078152728576.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 15.225146055221558s, THROUGHPUT = 3934.543536247756 samples/s
Epoch: 2 	Training Loss: 127811372611699968.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 15.218841314315796s, THROUGHPUT = 3936.1735077459903 samples/s
Epoch: 3 	Training Loss: 53816541468488456.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 15.150481462478638s, THROUGHPUT = 3953.933751105995 samples/s
Epoch: 4 	Training Loss: 31935949152182916.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 15.24436092376709s, THROUGHPUT = 3929.584211470959 samples/s
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 60.8396520614624s, BATCH = 32 AVG. THROUGHPUT = 3938.558751642675 samples/s, AVG. LATENCY = 15.20970743894577
RANK = 1, GPU AMOUNT = 8, ELAPSED TIME = 60.82136821746826s, BATCH = 32 AVG. THROUGHPUT = 3939.728817613285 samples/s, AVG. LATENCY = 15.205224394798279
RANK = 7, GPU AMOUNT = 8, ELAPSED TIME = 60.85922884941101s, BATCH = 32 AVG. THROUGHPUT = 3937.2725236502 samples/s, AVG. LATENCY = 15.214696884155273RANK = 6, GPU AMOUNT = 8, ELAPSED TIME = 60.85658073425293s, BATCH = 32 AVG. THROUGHPUT = 3937.4521936535325 samples/s, AVG. LATENCY = 15.214008092880249

RANK = 2, GPU AMOUNT = 8, ELAPSED TIME = 60.86274528503418s, BATCH = 32 AVG. THROUGHPUT = 3937.044905806222 samples/s, AVG. LATENCY = 15.215579509735107
RANK = 3, GPU AMOUNT = 8, ELAPSED TIME = 60.85507345199585s, BATCH = 32 AVG. THROUGHPUT = 3937.542976956305 samples/s, AVG. LATENCY = 15.213643431663513
RANK = 5, GPU AMOUNT = 8, ELAPSED TIME = 60.84831929206848s, BATCH = 32 AVG. THROUGHPUT = 3937.9910083880795 samples/s, AVG. LATENCY = 15.21194052696228
RANK = 4, GPU AMOUNT = 8, ELAPSED TIME = 60.84606385231018s, BATCH = 32 AVG. THROUGHPUT = 3938.141985650795 samples/s, AVG. LATENCY = 15.211365401744843
Test Loss: 29526710996942876.000000
Test Loss: 29526710996942876.000000


Test Loss: 29526710996942876.000000

Test Loss: 29526710996942876.000000

Test Loss: 29526710996942876.000000

Test Loss: 29526710996942876.000000

Test Loss: 29526710996942876.000000


Test Accuracy (Overall): 10.9000% (1090/10000)

Test Accuracy (Overall): 10.9000% (1090/10000)

Test Accuracy (Overall): 10.9000% (1090/10000)

Test Accuracy (Overall): 10.9000% (1090/10000)

Test Accuracy (Overall): 10.9000% (1090/10000)

Test Accuracy (Overall): 10.9000% (1090/10000)

Test Accuracy (Overall): 10.9000% (1090/10000)
Test Loss: 29526710996942876.000000


Test Accuracy (Overall): 10.9000% (1090/10000)
Best ips: 3938.558751642675, Latency: 0.06514684155456021, Best strategy:
{'seq.0': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.1': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.2': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.3': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.4': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.5': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.6': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.7': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.8': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.9': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.10': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.11': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.12': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.13': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.14': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.15': {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.16': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.17': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.18': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.19': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.20': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.21': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.22': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.23': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.24': {
    "DataParallel": {
        "gather_input": false,
        "split_output": true,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.25': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.26': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.27': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.28': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.29': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.30': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.31': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}} 
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2735 and data parallel seed: 17
[1920] rank = 5, world_size = 8
[1916] rank = 1, world_size = 8
[1915] rank = 0, world_size = 8
[1917] rank = 2, world_size = 8
[1918] rank = 3, world_size = 8
[1921] rank = 6, world_size = 8
[1922] rank = 7, world_size = 8
[1919] rank = 4, world_size = 8
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
WARNING:torch.distributed.run:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
> initializing model parallel with size 8
> initializing ddp with size 1
> initializing pipeline with size 1
> initializing model parallel cuda seeds on global rank 0, model parallel rank 0, and data parallel rank 0 with model parallel seed: 2736 and data parallel seed: 18
[3467] rank = 4, world_size = 8
[3464] rank = 1, world_size = 8
[3469] rank = 6, world_size = 8
[3470] rank = 7, world_size = 8
[3468] rank = 5, world_size = 8
[3463] rank = 0, world_size = 8
[3466] rank = 3, world_size = 8
[3465] rank = 2, world_size = 8
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
finding optimal strategy
optimal latency: 0.016436076164245604, optimal strategy:
{'seq.0': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.1': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.2': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.3': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.4': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.5': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.6': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.7': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.8': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.9': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.10': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.11': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.12': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.13': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.14': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.15': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.16': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.17': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.18': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.19': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.20': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.21': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.22': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.23': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.24': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.25': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.26': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.27': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.28': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.29': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.30': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.31': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}}
Epoch: 1 	Training Loss: 389211233838534164480.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 13.448339462280273s, THROUGHPUT = 4454.378934144097 samples/s
Epoch: 2 	Training Loss: 86949998622873296.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 13.17181134223938s, THROUGHPUT = 4547.893865432143 samples/s
Epoch: 3 	Training Loss: 45344044164972336.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 12.861437797546387s, THROUGHPUT = 4657.644109698844 samples/s
RANK = 3, GPU AMOUNT = 8, ELAPSED TIME = 52.36097812652588s, BATCH = 32 AVG. THROUGHPUT = 4577.796700887551 samples/s, AVG. LATENCY = 13.090138375759125
RANK = 6, GPU AMOUNT = 8, ELAPSED TIME = 52.374972105026245s, BATCH = 32 AVG. THROUGHPUT = 4576.704828768593 samples/s, AVG. LATENCY = 13.093614161014557
Epoch: 4 	Training Loss: 32200114563150476.000000
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 12.881566762924194s, THROUGHPUT = 4650.365992156798 samples/s
RANK = 0, GPU AMOUNT = 8, ELAPSED TIME = 52.36386728286743s, BATCH = 32 AVG. THROUGHPUT = 4577.57072535797 samples/s, AVG. LATENCY = 13.090788841247559
RANK = 1, GPU AMOUNT = 8, ELAPSED TIME = 52.374927282333374s, BATCH = 32 AVG. THROUGHPUT = 4576.634308700366 samples/s, AVG. LATENCY = 13.09361881017685
RANK = 4, GPU AMOUNT = 8, ELAPSED TIME = 52.38145160675049s, BATCH = 32 AVG. THROUGHPUT = 4576.066686078796 samples/s, AVG. LATENCY = 13.095256567001343
RANK = 5, GPU AMOUNT = 8, ELAPSED TIME = 52.37079977989197s, BATCH = 32 AVG. THROUGHPUT = 4576.9717952509 samples/s, AVG. LATENCY = 13.092597901821136
RANK = 2, GPU AMOUNT = 8, ELAPSED TIME = 52.3723349571228s, BATCH = 32 AVG. THROUGHPUT = 4576.80617722126 samples/s, AVG. LATENCY = 13.092939794063568
RANK = 7, GPU AMOUNT = 8, ELAPSED TIME = 52.38610529899597s, BATCH = 32 AVG. THROUGHPUT = 4575.530439869892 samples/s, AVG. LATENCY = 13.096407234668732
Test Loss: 19363723767831752.000000
Test Loss: 19363723767831752.000000


Test Loss: 19363723767831752.000000

Test Loss: 19363723767831752.000000
Test Loss: 19363723767831752.000000
Test Loss: 19363723767831752.000000



Test Loss: 19363723767831752.000000


Test Accuracy (Overall): 6.9700% (697/10000)
Test Accuracy (Overall): 6.9700% (697/10000)


Test Accuracy (Overall): 6.9700% (697/10000)

Test Accuracy (Overall): 6.9700% (697/10000)

Test Accuracy (Overall): 6.9700% (697/10000)
Test Accuracy (Overall): 6.9700% (697/10000)


Test Accuracy (Overall): 6.9700% (697/10000)
Test Loss: 19363723767831752.000000


Test Accuracy (Overall): 6.9700% (697/10000)
Best ips: 4577.57072535797, Latency: 0.05504943061078715, Best strategy:
{'seq.0': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": true
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.1': {
    "DataParallel": {
        "gather_input": true,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.2': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.3': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.4': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.5': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.6': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.7': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.8': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.9': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.10': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.11': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.12': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.13': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.14': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.15': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.16': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.17': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.18': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.19': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.20': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.21': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.22': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.23': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.24': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.25': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.26': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.27': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.28': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.29': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.30': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": false,
        "column_linear": false,
        "gather_output": false
    }
}, 'seq.31': {
    "DataParallel": {
        "gather_input": false,
        "split_output": false,
        "data_parallel_input": false
    },
    "ModelParallel": {
        "row_linear": false,
        "input_is_parallel": true,
        "column_linear": false,
        "gather_output": false
    }
}} 
